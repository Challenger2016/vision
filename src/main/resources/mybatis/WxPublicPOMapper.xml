<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.healthy.vision.mappers.WxPublicPOMapper">
  <cache type="com.healthy.vision.common.redis.RedisCache" />
  <resultMap id="BaseResultMap" type="com.healthy.vision.entity.po.WxPublicPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    <id column="wx_public_id" jdbcType="BIGINT" property="wxPublicId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="appid" jdbcType="VARCHAR" property="appid" />
    <result column="qr_code_url" jdbcType="VARCHAR" property="qrCodeUrl" />
    <result column="head_img_url" jdbcType="VARCHAR" property="headImgUrl" />
    <result column="service_type" jdbcType="CHAR" property="serviceType" />
    <result column="verify_type" jdbcType="CHAR" property="verifyType" />
    <result column="authorizer_refresh_token" jdbcType="VARCHAR" property="authorizerRefreshToken" />
    <result column="authorizer_access_token" jdbcType="VARCHAR" property="authorizerAccessToken" />
    <result column="authorizer_access_token_time" jdbcType="BIGINT" property="authorizerAccessTokenTime" />
    <result column="jssdk_access_token" jdbcType="VARCHAR" property="jssdkAccessToken" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="is_open_store" jdbcType="BIT" property="isOpenStore" />
    <result column="is_open_scan" jdbcType="BIT" property="isOpenScan" />
    <result column="is_open_pay" jdbcType="BIT" property="isOpenPay" />
    <result column="is_open_card" jdbcType="BIT" property="isOpenCard" />
    <result column="is_open_shake" jdbcType="BIT" property="isOpenShake" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="originid" jdbcType="VARCHAR" property="originid" />
    <result column="jssdk_access_token_time" jdbcType="BIGINT" property="jssdkAccessTokenTime" />
    <result column="platform_appid" jdbcType="VARCHAR" property="platformAppid" />
    <result column="is_connect" jdbcType="BIT" property="isConnect" />
    <result column="mini_program_info" jdbcType="VARCHAR" property="miniProgramInfo" />
    <result column="principal_name" jdbcType="VARCHAR" property="principalName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modified_user_id" jdbcType="BIGINT" property="modifiedUserId" />
    <result column="modified_user_name" jdbcType="VARCHAR" property="modifiedUserName" />
    <result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="valid" jdbcType="BIT" property="valid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    wx_public_id, nick_name, appid, qr_code_url, head_img_url, service_type, verify_type, 
    authorizer_refresh_token, authorizer_access_token, authorizer_access_token_time, 
    jssdk_access_token, alias, signature, is_open_store, is_open_scan, is_open_pay, is_open_card, 
    is_open_shake, code, originid, jssdk_access_token_time, platform_appid, is_connect, 
    mini_program_info, principal_name, remark, create_user_id, create_user_name, create_date, 
    modified_user_id, modified_user_name, modified_date, valid
  </sql>
  <select id="selectByExample" parameterType="com.healthy.vision.entity.po.WxPublicPOExample" resultMap="BaseResultMap">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_wx_public
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_wx_public
    where wx_public_id = #{wxPublicId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    delete from t_wx_public
    where wx_public_id = #{wxPublicId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.healthy.vision.entity.po.WxPublicPOExample">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    delete from t_wx_public
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.healthy.vision.entity.po.WxPublicPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    <selectKey keyProperty="wxPublicId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_wx_public (nick_name, appid, qr_code_url, 
      head_img_url, service_type, verify_type, 
      authorizer_refresh_token, authorizer_access_token, 
      authorizer_access_token_time, jssdk_access_token, 
      alias, signature, is_open_store, 
      is_open_scan, is_open_pay, is_open_card, 
      is_open_shake, code, originid, 
      jssdk_access_token_time, platform_appid, is_connect, 
      mini_program_info, principal_name, remark, 
      create_user_id, create_user_name, create_date, 
      modified_user_id, modified_user_name, modified_date, 
      valid)
    values (#{nickName,jdbcType=VARCHAR}, #{appid,jdbcType=VARCHAR}, #{qrCodeUrl,jdbcType=VARCHAR}, 
      #{headImgUrl,jdbcType=VARCHAR}, #{serviceType,jdbcType=CHAR}, #{verifyType,jdbcType=CHAR}, 
      #{authorizerRefreshToken,jdbcType=VARCHAR}, #{authorizerAccessToken,jdbcType=VARCHAR}, 
      #{authorizerAccessTokenTime,jdbcType=BIGINT}, #{jssdkAccessToken,jdbcType=VARCHAR}, 
      #{alias,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, #{isOpenStore,jdbcType=BIT}, 
      #{isOpenScan,jdbcType=BIT}, #{isOpenPay,jdbcType=BIT}, #{isOpenCard,jdbcType=BIT}, 
      #{isOpenShake,jdbcType=BIT}, #{code,jdbcType=VARCHAR}, #{originid,jdbcType=VARCHAR}, 
      #{jssdkAccessTokenTime,jdbcType=BIGINT}, #{platformAppid,jdbcType=VARCHAR}, #{isConnect,jdbcType=BIT}, 
      #{miniProgramInfo,jdbcType=VARCHAR}, #{principalName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=BIGINT}, #{createUserName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{modifiedUserId,jdbcType=BIGINT}, #{modifiedUserName,jdbcType=VARCHAR}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{valid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.healthy.vision.entity.po.WxPublicPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    <selectKey keyProperty="wxPublicId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_wx_public
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="appid != null">
        appid,
      </if>
      <if test="qrCodeUrl != null">
        qr_code_url,
      </if>
      <if test="headImgUrl != null">
        head_img_url,
      </if>
      <if test="serviceType != null">
        service_type,
      </if>
      <if test="verifyType != null">
        verify_type,
      </if>
      <if test="authorizerRefreshToken != null">
        authorizer_refresh_token,
      </if>
      <if test="authorizerAccessToken != null">
        authorizer_access_token,
      </if>
      <if test="authorizerAccessTokenTime != null">
        authorizer_access_token_time,
      </if>
      <if test="jssdkAccessToken != null">
        jssdk_access_token,
      </if>
      <if test="alias != null">
        alias,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="isOpenStore != null">
        is_open_store,
      </if>
      <if test="isOpenScan != null">
        is_open_scan,
      </if>
      <if test="isOpenPay != null">
        is_open_pay,
      </if>
      <if test="isOpenCard != null">
        is_open_card,
      </if>
      <if test="isOpenShake != null">
        is_open_shake,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="originid != null">
        originid,
      </if>
      <if test="jssdkAccessTokenTime != null">
        jssdk_access_token_time,
      </if>
      <if test="platformAppid != null">
        platform_appid,
      </if>
      <if test="isConnect != null">
        is_connect,
      </if>
      <if test="miniProgramInfo != null">
        mini_program_info,
      </if>
      <if test="principalName != null">
        principal_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifiedUserId != null">
        modified_user_id,
      </if>
      <if test="modifiedUserName != null">
        modified_user_name,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>
      <if test="valid != null">
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="qrCodeUrl != null">
        #{qrCodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="headImgUrl != null">
        #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        #{serviceType,jdbcType=CHAR},
      </if>
      <if test="verifyType != null">
        #{verifyType,jdbcType=CHAR},
      </if>
      <if test="authorizerRefreshToken != null">
        #{authorizerRefreshToken,jdbcType=VARCHAR},
      </if>
      <if test="authorizerAccessToken != null">
        #{authorizerAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="authorizerAccessTokenTime != null">
        #{authorizerAccessTokenTime,jdbcType=BIGINT},
      </if>
      <if test="jssdkAccessToken != null">
        #{jssdkAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="isOpenStore != null">
        #{isOpenStore,jdbcType=BIT},
      </if>
      <if test="isOpenScan != null">
        #{isOpenScan,jdbcType=BIT},
      </if>
      <if test="isOpenPay != null">
        #{isOpenPay,jdbcType=BIT},
      </if>
      <if test="isOpenCard != null">
        #{isOpenCard,jdbcType=BIT},
      </if>
      <if test="isOpenShake != null">
        #{isOpenShake,jdbcType=BIT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="originid != null">
        #{originid,jdbcType=VARCHAR},
      </if>
      <if test="jssdkAccessTokenTime != null">
        #{jssdkAccessTokenTime,jdbcType=BIGINT},
      </if>
      <if test="platformAppid != null">
        #{platformAppid,jdbcType=VARCHAR},
      </if>
      <if test="isConnect != null">
        #{isConnect,jdbcType=BIT},
      </if>
      <if test="miniProgramInfo != null">
        #{miniProgramInfo,jdbcType=VARCHAR},
      </if>
      <if test="principalName != null">
        #{principalName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUserId != null">
        #{modifiedUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedUserName != null">
        #{modifiedUserName,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.healthy.vision.entity.po.WxPublicPOExample" resultType="java.lang.Long">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    select count(*) from t_wx_public
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    update t_wx_public
    <set>
      <if test="record.wxPublicId != null">
        wx_public_id = #{record.wxPublicId,jdbcType=BIGINT},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.appid != null">
        appid = #{record.appid,jdbcType=VARCHAR},
      </if>
      <if test="record.qrCodeUrl != null">
        qr_code_url = #{record.qrCodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.headImgUrl != null">
        head_img_url = #{record.headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceType != null">
        service_type = #{record.serviceType,jdbcType=CHAR},
      </if>
      <if test="record.verifyType != null">
        verify_type = #{record.verifyType,jdbcType=CHAR},
      </if>
      <if test="record.authorizerRefreshToken != null">
        authorizer_refresh_token = #{record.authorizerRefreshToken,jdbcType=VARCHAR},
      </if>
      <if test="record.authorizerAccessToken != null">
        authorizer_access_token = #{record.authorizerAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.authorizerAccessTokenTime != null">
        authorizer_access_token_time = #{record.authorizerAccessTokenTime,jdbcType=BIGINT},
      </if>
      <if test="record.jssdkAccessToken != null">
        jssdk_access_token = #{record.jssdkAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null">
        alias = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.isOpenStore != null">
        is_open_store = #{record.isOpenStore,jdbcType=BIT},
      </if>
      <if test="record.isOpenScan != null">
        is_open_scan = #{record.isOpenScan,jdbcType=BIT},
      </if>
      <if test="record.isOpenPay != null">
        is_open_pay = #{record.isOpenPay,jdbcType=BIT},
      </if>
      <if test="record.isOpenCard != null">
        is_open_card = #{record.isOpenCard,jdbcType=BIT},
      </if>
      <if test="record.isOpenShake != null">
        is_open_shake = #{record.isOpenShake,jdbcType=BIT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.originid != null">
        originid = #{record.originid,jdbcType=VARCHAR},
      </if>
      <if test="record.jssdkAccessTokenTime != null">
        jssdk_access_token_time = #{record.jssdkAccessTokenTime,jdbcType=BIGINT},
      </if>
      <if test="record.platformAppid != null">
        platform_appid = #{record.platformAppid,jdbcType=VARCHAR},
      </if>
      <if test="record.isConnect != null">
        is_connect = #{record.isConnect,jdbcType=BIT},
      </if>
      <if test="record.miniProgramInfo != null">
        mini_program_info = #{record.miniProgramInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.principalName != null">
        principal_name = #{record.principalName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createUserName != null">
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedUserId != null">
        modified_user_id = #{record.modifiedUserId,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedUserName != null">
        modified_user_name = #{record.modifiedUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedDate != null">
        modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    update t_wx_public
    set wx_public_id = #{record.wxPublicId,jdbcType=BIGINT},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      appid = #{record.appid,jdbcType=VARCHAR},
      qr_code_url = #{record.qrCodeUrl,jdbcType=VARCHAR},
      head_img_url = #{record.headImgUrl,jdbcType=VARCHAR},
      service_type = #{record.serviceType,jdbcType=CHAR},
      verify_type = #{record.verifyType,jdbcType=CHAR},
      authorizer_refresh_token = #{record.authorizerRefreshToken,jdbcType=VARCHAR},
      authorizer_access_token = #{record.authorizerAccessToken,jdbcType=VARCHAR},
      authorizer_access_token_time = #{record.authorizerAccessTokenTime,jdbcType=BIGINT},
      jssdk_access_token = #{record.jssdkAccessToken,jdbcType=VARCHAR},
      alias = #{record.alias,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      is_open_store = #{record.isOpenStore,jdbcType=BIT},
      is_open_scan = #{record.isOpenScan,jdbcType=BIT},
      is_open_pay = #{record.isOpenPay,jdbcType=BIT},
      is_open_card = #{record.isOpenCard,jdbcType=BIT},
      is_open_shake = #{record.isOpenShake,jdbcType=BIT},
      code = #{record.code,jdbcType=VARCHAR},
      originid = #{record.originid,jdbcType=VARCHAR},
      jssdk_access_token_time = #{record.jssdkAccessTokenTime,jdbcType=BIGINT},
      platform_appid = #{record.platformAppid,jdbcType=VARCHAR},
      is_connect = #{record.isConnect,jdbcType=BIT},
      mini_program_info = #{record.miniProgramInfo,jdbcType=VARCHAR},
      principal_name = #{record.principalName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modified_user_id = #{record.modifiedUserId,jdbcType=BIGINT},
      modified_user_name = #{record.modifiedUserName,jdbcType=VARCHAR},
      modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      valid = #{record.valid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.healthy.vision.entity.po.WxPublicPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    update t_wx_public
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="appid != null">
        appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="qrCodeUrl != null">
        qr_code_url = #{qrCodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="headImgUrl != null">
        head_img_url = #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        service_type = #{serviceType,jdbcType=CHAR},
      </if>
      <if test="verifyType != null">
        verify_type = #{verifyType,jdbcType=CHAR},
      </if>
      <if test="authorizerRefreshToken != null">
        authorizer_refresh_token = #{authorizerRefreshToken,jdbcType=VARCHAR},
      </if>
      <if test="authorizerAccessToken != null">
        authorizer_access_token = #{authorizerAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="authorizerAccessTokenTime != null">
        authorizer_access_token_time = #{authorizerAccessTokenTime,jdbcType=BIGINT},
      </if>
      <if test="jssdkAccessToken != null">
        jssdk_access_token = #{jssdkAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="isOpenStore != null">
        is_open_store = #{isOpenStore,jdbcType=BIT},
      </if>
      <if test="isOpenScan != null">
        is_open_scan = #{isOpenScan,jdbcType=BIT},
      </if>
      <if test="isOpenPay != null">
        is_open_pay = #{isOpenPay,jdbcType=BIT},
      </if>
      <if test="isOpenCard != null">
        is_open_card = #{isOpenCard,jdbcType=BIT},
      </if>
      <if test="isOpenShake != null">
        is_open_shake = #{isOpenShake,jdbcType=BIT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="originid != null">
        originid = #{originid,jdbcType=VARCHAR},
      </if>
      <if test="jssdkAccessTokenTime != null">
        jssdk_access_token_time = #{jssdkAccessTokenTime,jdbcType=BIGINT},
      </if>
      <if test="platformAppid != null">
        platform_appid = #{platformAppid,jdbcType=VARCHAR},
      </if>
      <if test="isConnect != null">
        is_connect = #{isConnect,jdbcType=BIT},
      </if>
      <if test="miniProgramInfo != null">
        mini_program_info = #{miniProgramInfo,jdbcType=VARCHAR},
      </if>
      <if test="principalName != null">
        principal_name = #{principalName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUserId != null">
        modified_user_id = #{modifiedUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedUserName != null">
        modified_user_name = #{modifiedUserName,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
    </set>
    where wx_public_id = #{wxPublicId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.healthy.vision.entity.po.WxPublicPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-12-26 10:46:20.
    -->
    update t_wx_public
    set nick_name = #{nickName,jdbcType=VARCHAR},
      appid = #{appid,jdbcType=VARCHAR},
      qr_code_url = #{qrCodeUrl,jdbcType=VARCHAR},
      head_img_url = #{headImgUrl,jdbcType=VARCHAR},
      service_type = #{serviceType,jdbcType=CHAR},
      verify_type = #{verifyType,jdbcType=CHAR},
      authorizer_refresh_token = #{authorizerRefreshToken,jdbcType=VARCHAR},
      authorizer_access_token = #{authorizerAccessToken,jdbcType=VARCHAR},
      authorizer_access_token_time = #{authorizerAccessTokenTime,jdbcType=BIGINT},
      jssdk_access_token = #{jssdkAccessToken,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      is_open_store = #{isOpenStore,jdbcType=BIT},
      is_open_scan = #{isOpenScan,jdbcType=BIT},
      is_open_pay = #{isOpenPay,jdbcType=BIT},
      is_open_card = #{isOpenCard,jdbcType=BIT},
      is_open_shake = #{isOpenShake,jdbcType=BIT},
      code = #{code,jdbcType=VARCHAR},
      originid = #{originid,jdbcType=VARCHAR},
      jssdk_access_token_time = #{jssdkAccessTokenTime,jdbcType=BIGINT},
      platform_appid = #{platformAppid,jdbcType=VARCHAR},
      is_connect = #{isConnect,jdbcType=BIT},
      mini_program_info = #{miniProgramInfo,jdbcType=VARCHAR},
      principal_name = #{principalName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modified_user_id = #{modifiedUserId,jdbcType=BIGINT},
      modified_user_name = #{modifiedUserName,jdbcType=VARCHAR},
      modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=BIT}
    where wx_public_id = #{wxPublicId,jdbcType=BIGINT}
  </update>
  <cache type="com.healthy.vision.common.redis.RedisCache" />
  <cache type="com.healthy.vision.common.redis.RedisCache" />
  <cache type="com.healthy.vision.common.redis.RedisCache" />
  <cache type="com.healthy.vision.common.redis.RedisCache" />
  <cache type="com.healthy.vision.common.redis.RedisCache" />
</mapper>